Section4: Working with Data
 Lecture 4.3: Understand Spring Data
 
 * Polyglot Persistence with Spring
   * Spring Data provides a consistent programming model for a variety of
     different persistence stores:
     - JDBC
     - JPA
     - MongoDB
     - Neo4J
     - Redis
     - Elasticsearch
     - Solr
     - Gemfire
     - Cassandra
     - Couchbase
 
 * Repository Interface
   * CrudRepository (create, read, update, delete)
   * Paging and sorting support
   * Custom finder method support
     
     Iterable<Car> findByMake(String make)
     			  \          \        /
     SELECT * FROM car WHERE make = "KIA"
     
      - findByLastnameAndFirstname
      - findByLastnameOrFirstname
      - findByStartDateBetween
      - findByAgeLessThan
      - findByFirstnameLikeIgnoringCase
 
 * Template Classes
   * Consistent code style for working with persistence stores
   * Same idea as JdbcTemplate
     * Exception translation, resource handling, callbacks
      
      mongoTemplate.execute ((db) -> {
          // ...any mongo, exceptions raised here will be translated
          return result;
      });
    
   